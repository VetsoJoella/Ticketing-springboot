
1- Modification des catégories d'ages :
    
    Affichage 
        ✔ Formulaire de login @done (3/19/2025, 6:46:38 AM)
            - input text + input password + bouton validation 

        ✔ Formulaire de modif : @done (3/19/2025, 6:46:39 AM)
            - select de catégorie + input number + bouton 

    Métier 
        ✔ Classe ConnectionException extends Exception @done (3/19/2025, 6:53:03 AM)
            - args Utlisateur
        ✔ Classe ValeurInvalideException extends Exception @done (3/19/2025, 6:53:04 AM)
        ✔ Classe abstract Utilisateur @done (3/19/2025, 6:53:05 AM)
            - args : id 
            - abstract void se_connecter(Connection) throws ConnectionException 
        ✔ Classe Admin extends Utilisateur @done (3/19/2025, 6:53:06 AM)
            - args : login, mdp 
            - void se_connecter(Connection) throws ConnectionException 
        ✔ Classe Categorie : @done (3/19/2025, 7:21:13 AM)
            - args : id, nom 
            - Categorie[] getAll(Connection) throws Exception 
            - Categorie getById(Connection, id) throws Exception 
        ✔ Classe CategorieAge : @done (3/19/2025, 7:39:44 AM)
            - args : id, Categorie, valeur 
            - void setValeur(valeur) throws ValeurInvalideException 
            - CategorieAge[] getAll(Connection) throws Exception 
            - Categorie getById(Connection, id) throws Exception
            - Categorie getByCategorie(Connection, Categorie) throws Exception
            - void updateCategorie(Connection) throws Exception
            - void insertHistorique(Connection) throws Exception 
            - void update(Connection) throws Exception 
    
    Base 
        ✔ Table Categorie : id, nom @done (4/11/2025, 9:53:22 AM)
        ✔ Table CategorieAge : id, idCategorie, valeur @done (4/11/2025, 9:53:23 AM)
        ✔ Vue v_Categorie_age : CategorieAge left join Categorie on idCategorie @done (4/11/2025, 9:53:23 AM)


2- Annulation réservation vol : 
    
    Affichage 
        ☐ Tableau des reservations : id, avion, ville départ, ville destination, date décollage, Lien annulation  
    
    Métier 
        ✔ Clase AnnulationReservationException extends Exception @done (4/11/2025, 9:53:49 AM)
            - args : Reservation 

        ✔ Classe Reservation @done (4/11/2025, 9:53:53 AM)
            - args: id, Passager
            - Vol getVolAssocie(Connection) throws Exception
            - void annulerReservation(Connection) throws ReservationException 
            - Reservation[] getAll(Connection) throws Exception
            - Reservation getById(Connection) throws Exception
            
        ✔ Classe AnnulationReservation : @done (4/11/2025, 9:53:56 AM)
            - args : Reservation, dateAnnulation 
            - void confirmerAnnulation(Connection)
            - void set(Connection) throws Exception

        ✔ Classe Vol @done (4/11/2025, 9:53:57 AM)
            - args : dateDécollage, derniereAnnulation
            - void annulerReservation() 

    Base 
        ✔ vue v_reservation_vol : reservation left join vol on idVol @done (4/11/2025, 9:54:01 AM)
3- BackOffice Spring Boot : 
    - Page de Connection 
        ✔ fomulaire de Connection @done (4/3/2025, 10:35:19 AM)
        ✔ Fonction se connecter dans Admin @done (4/4/2025, 9:21:11 AM)
        ✔ Redirection vers form @done (4/3/2025, 10:35:24 AM)
        ✔ Redirection vers home apres validation Connection @done (4/4/2025, 9:21:14 AM)
    - Page de mise à jour catégorie age + promotion reliée avec 
        ✔ formulaire de Modification + tableau de Categorie + promotion actuelle @done (4/9/2025, 9:16:01 AM)
        ✔ Classe Categorie : @done (4/9/2025, 9:15:54 AM)
            - args : id, categorie 
        ✔ Classe CategorieAge : @done (4/9/2025, 9:15:52 AM)
            - args : ageMin, ageMax, id, Categorie, promotion 
            - CategorieAge[] getAll(Connection) throws Exception 
            - void update(Connection) 
            - setAgeMin(String); setAgeMax(String) throws ValeurInvalideException
            - setAgeMin(int); setAgeMax(int) throws ValeurInvalideException

        ✔ url de Redirection vers la form @done (4/9/2025, 10:02:30 AM)
        ✔ url de reception des données mAJ @done (4/9/2025, 10:02:31 AM)
    - Annulation de reservation 
        ✔ tableau des reservations : Passager, datereservation @done (4/4/2025, 9:21:37 AM)
        ✔ Fonction de get des listes des reservations @done (4/9/2025, 4:34:39 PM)
        ✔ Classe ReservationException extends Exception: @done (4/9/2025, 4:42:46 PM)
            - args : Object
        ✔ Classe HoraireVol : @done (4/9/2025, 5:08:13 PM)
            - args : derniereAnnulation, derniereReservation 
        ✔ Classe AnnulationReservation : @done (4/9/2025, 5:08:12 PM)
            - args : dateAnnulation, Reservation 
            - HoraireVol getDateDerniereAnnulation(Connection) throws Exception 
            - setDateAnnulation() throws ReservationException 
            - void confirmer(Connection)
            - void insertHistoriqueAnnulation(Connection) throws Exception 

        ✔ Reservation @done (4/9/2025, 5:08:17 PM)
            - void deleteFille(Connection) throws Exception 
            - public void delete(Connection) throws Exception 
        ✔ Fonction de suppression de réservation @done (4/11/2025, 9:54:08 AM)
        ✔ Url de Redirection vers la page de liste @done (4/11/2025, 9:54:09 AM)
        ✔ Url de Redirection de la requete de suppression @done (4/11/2025, 9:54:10 AM)

4- FrontOffice Spring Boot : 
    - Page de connection : 
        ✔ Page html : @done (4/11/2025, 10:28:49 AM)
            - formulaire avec input text + name + bouton
            - action /client/login
            - method : post 
        ✔ Méthode redirection login : @done (4/11/2025, 11:02:40 AM)
            - getMapping 
            - Redirection vers client/login.html
        
        ✔ Méthode listeReservation : @done (4/11/2025, 11:02:43 AM)
            -méthode getMapping
            - return vers page reservations.html 

        ✔ Méthode login : @done (4/11/2025, 11:02:44 AM)
            - postmapping 
            - appel de se_connecter dans passager 
            - redirection vers listeReservation

    - Page de reservations : 
        ✔ Front : @done (4/11/2025, 11:02:48 AM)
            - tableau : id, date reservation, vol, départ-> destination, annuler 
        ✔ Métier : @done (4/11/2025, 11:02:49 AM)
            - Classe Reservation : 
                . Reservation[] getByPassager(Connection, Passager) throws Exception
    - Page déconnection : 
        ✔ Métier: @done (4/11/2025, 11:02:50 AM)
            - redirection vers client/login

    ✔ Annulation reservation @done (4/14/2025, 9:09:43 AM)


5- Export de données : 

    Coté framework maison : 
        
        Métier : 
            ✔ Classe Reservation : @done (4/14/2025, 9:57:00 AM)
                - Méthode getReservationById(Connection, id) throws Exception 
            ✔ Classe ReservationDTO : @done (4/14/2025, 9:55:31 AM)
                - args : id, passager, datereservation, image, ReservationFilleDTO[] 
                - ReservationDTO(Reservation)
            ✔ Classe ReservationFilleDTO : @done (4/14/2025, 9:51:55 AM)
                - args :  id, promotion, prix, categorie, classe 
                - ReservationFilleDTO(ReservationFille)  
        Intégration : 
            ✔ Classe ReservationAPI : @done (4/15/2025, 4:50:34 PM)
                - args : datasource autowired
                - restController
                - Méthode getReservationById(Id) 


    Coté Spring boot : (coté admin)

        Affichage : 
            ✔ Liste réservation : @done (4/15/2025, 4:50:37 PM)
                - ajout de icon : export dedans 
                
        Intégration : 
            ✔ Classe ReservationDTO : @done (4/15/2025, 4:53:29 PM)
                - args : id, passager, datereservation, image, ReservationFilleDTO[] 
                - ReservationDTO()
            ✔ Classe ReservationFilleDTO : @done (4/15/2025, 4:53:33 PM)
                - args :  id, promotion, prix, categorie, classe 
                - ReservationFilleDTO() 
            ☐ Classe ReservationController : 
                - @Controller 
                - expotPDF() 

            ☐ Class PDFManager 

☐ Création de gestionnaire de pdf + structure de pdf 
☐ Ajout d'action de téléchargement


Classe 1 : 
    Byte[]
    Object 
    extension
    fileName, 
    header
    separator, 
    content-type

    => appel de export csv via lib 


Service dev :
    export(instance, data, name) 